{"version":3,"sources":["component/api.ts","App.tsx","index.tsx"],"names":["getDataFromServer","url","fetch","then","response","json","App","useState","sortType","setSortType","todos","setTodos","loading","setLoading","error","setError","reversed","setReversed","handleLoadClick","a","todosFromServer","usersFromServer","Promise","resolve","setTimeout","todosWithUsers","map","todo","user","find","id","userId","visibleTodos","sort","b","title","localeCompare","completed","name","getVisibleTodos","reverse","length","type","onClick","key","checked","disabled","ReactDOM","render","document","getElementById"],"mappings":"iSAeMA,G,MAAoB,SAAIC,GAC5B,OAAOC,MAhBO,uCAgBSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YC2EhBC,EAvFH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAEUF,mBAAiB,IAF3B,mBAETG,EAFS,KAEFC,EAFE,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIUN,mBAAS,IAJnB,mBAITO,EAJS,KAIFC,EAJE,OAKgBR,oBAAS,GALzB,mBAKTS,EALS,KAKCC,EALD,KAOVC,EAAe,uCAAG,gCAAAC,EAAA,6DACtBN,GAAW,GADW,kBDUIb,EAAwB,UCV5B,cAIdoB,EAJc,gBDQIpB,EAAwB,UCR5B,cAKdqB,EALc,iBAOd,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,QAP7B,QASdE,EAAyBL,EAAgBM,KAAI,SAACC,GAAD,mBAAC,eAC/CA,GAD8C,IAEjDC,KAAMP,EAAgBQ,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAKI,eAGtDpB,EAASc,GAdW,kDAgBpBV,EAAS,iBAhBW,QAmBtBF,GAAW,GAnBW,0DAAH,qDAqCfmB,EAfkB,WACtB,OAAQxB,GACN,IAAK,QACH,OAAO,YAAIE,GAAOuB,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEgB,MAAMC,cAAcF,EAAEC,UAC3D,IAAK,YACH,OAAO,YAAIzB,GAAOuB,MAAK,SAACd,EAAGe,GAAJ,OAAWf,EAAEkB,WAAaH,EAAEG,aACrD,IAAK,OACH,OAAO,YAAI3B,GAAOuB,MAAK,SAACd,EAAGe,GACzB,OAAQf,EAAES,MAAQM,EAAEN,KAAQT,EAAES,KAAKU,KAAKF,cAAcF,EAAEN,KAAKU,MAAQ,KAGzE,QAAS,OAAO5B,GAIC6B,GAMrB,OAJIvB,GACFgB,EAAaQ,UAIb,6BACE,qDAEE9B,EAAM+B,OASN,oCACE,4BAAQC,KAAK,SAASC,QAAS,kBAAM1B,GAAaD,KAAlD,WACA,4BAAQ0B,KAAK,SAASC,QAAS,kBAAMlC,EAAY,WAAjD,iBACA,4BAAQiC,KAAK,SAASC,QAAS,kBAAMlC,EAAY,eAAjD,qBACA,4BAAQiC,KAAK,SAASC,QAAS,kBAAMlC,EAAY,UAAjD,gBACA,4BAAQiC,KAAK,SAASC,QAAS,kBAAMlC,EAAY,MAAjD,SAEA,4BACGuB,EAAaN,KAAI,SAAAC,GAAI,OACpB,wBAAIiB,IAAKjB,EAAKG,IACZ,2BAAOY,KAAK,WAAWG,QAASlB,EAAKU,UAAWS,UAAQ,IAD1D,UAEMnB,EAAKQ,MAFX,SAIGR,EAAKC,KAAOD,EAAKC,KAAKU,KAAO,UAJhC,UAjBN,oCACE,4BAAQI,KAAK,SAASC,QAASzB,EAAiB4B,SAAUlC,GACvDA,EAAU,aAAe,QAG3BE,GAAS,8BAAOA,MC7D3BiC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.13b74732.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nconst getDataFromServer = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => getDataFromServer<User>('/users');\n\nexport const getTodos = () => getDataFromServer<Todo>('/todos');\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos, Todo } from './component/api';\n\nconst App = () => {\n  const [sortType, setSortType] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  const handleLoadClick = async () => {\n    setLoading(true);\n\n    try {\n      const todosFromServer = await getTodos();\n      const usersFromServer = await getUsers();\n\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      const todosWithUsers: Todo[] = todosFromServer.map((todo: Todo) => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      }));\n\n      setTodos(todosWithUsers);\n    } catch (e) {\n      setError('Loading error');\n    }\n\n    setLoading(false);\n  };\n\n  const getVisibleTodos = () => {\n    switch (sortType) {\n      case 'title':\n        return [...todos].sort((a, b) => a.title.localeCompare(b.title));\n      case 'completed':\n        return [...todos].sort((a, b) => +a.completed - +b.completed);\n      case 'user':\n        return [...todos].sort((a, b) => {\n          return (a.user && b.user) ? a.user.name.localeCompare(b.user.name) : 0;\n        });\n\n      default: return todos;\n    }\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  if (reversed) {\n    visibleTodos.reverse();\n  }\n\n  return (\n    <div>\n      <h1>Dynamic list of TODOs</h1>\n\n      {!todos.length ? (\n        <>\n          <button type=\"button\" onClick={handleLoadClick} disabled={loading}>\n            {loading ? 'Loading...' : 'Load'}\n          </button>\n\n          {error && <span>{error}</span>}\n        </>\n      ) : (\n        <>\n          <button type=\"button\" onClick={() => setReversed(!reversed)}>Reverse</button>\n          <button type=\"button\" onClick={() => setSortType('title')}>Sort by title</button>\n          <button type=\"button\" onClick={() => setSortType('completed')}>Sort by completed</button>\n          <button type=\"button\" onClick={() => setSortType('user')}>Sort by user</button>\n          <button type=\"button\" onClick={() => setSortType('')}>Reset</button>\n\n          <ul>\n            {visibleTodos.map(todo => (\n              <li key={todo.id}>\n                <input type=\"checkbox\" checked={todo.completed} disabled />\n                {`${todo.title} `}\n                (\n                {todo.user ? todo.user.name : 'Unknown'}\n                )\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}